// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: tracking/services/task.proto

package services

import (
	entities "github.com/Tracking-SYS/proto-tracking-gen/go/tracking/entities"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskServiceGetSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskServiceGetSingleRequest) Reset() {
	*x = TaskServiceGetSingleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_services_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskServiceGetSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskServiceGetSingleRequest) ProtoMessage() {}

func (x *TaskServiceGetSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_services_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskServiceGetSingleRequest.ProtoReflect.Descriptor instead.
func (*TaskServiceGetSingleRequest) Descriptor() ([]byte, []int) {
	return file_tracking_services_task_proto_rawDescGZIP(), []int{0}
}

func (x *TaskServiceGetSingleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TaskServiceGetSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *entities.TaskInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskServiceGetSingleResponse) Reset() {
	*x = TaskServiceGetSingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_services_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskServiceGetSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskServiceGetSingleResponse) ProtoMessage() {}

func (x *TaskServiceGetSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_services_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskServiceGetSingleResponse.ProtoReflect.Descriptor instead.
func (*TaskServiceGetSingleResponse) Descriptor() ([]byte, []int) {
	return file_tracking_services_task_proto_rawDescGZIP(), []int{1}
}

func (x *TaskServiceGetSingleResponse) GetData() *entities.TaskInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Page  uint32   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *TaskServiceGetRequest) Reset() {
	*x = TaskServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_services_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskServiceGetRequest) ProtoMessage() {}

func (x *TaskServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_services_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskServiceGetRequest.ProtoReflect.Descriptor instead.
func (*TaskServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_tracking_services_task_proto_rawDescGZIP(), []int{2}
}

func (x *TaskServiceGetRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TaskServiceGetRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TaskServiceGetRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type TaskServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*entities.TaskInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskServiceGetResponse) Reset() {
	*x = TaskServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_services_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskServiceGetResponse) ProtoMessage() {}

func (x *TaskServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_services_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskServiceGetResponse.ProtoReflect.Descriptor instead.
func (*TaskServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_tracking_services_task_proto_rawDescGZIP(), []int{3}
}

func (x *TaskServiceGetResponse) GetData() []*entities.TaskInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *entities.TaskInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskServiceCreateRequest) Reset() {
	*x = TaskServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_services_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskServiceCreateRequest) ProtoMessage() {}

func (x *TaskServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_services_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*TaskServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_tracking_services_task_proto_rawDescGZIP(), []int{4}
}

func (x *TaskServiceCreateRequest) GetData() *entities.TaskInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *entities.TaskInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskServiceCreateResponse) Reset() {
	*x = TaskServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_services_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskServiceCreateResponse) ProtoMessage() {}

func (x *TaskServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_services_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*TaskServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_tracking_services_task_proto_rawDescGZIP(), []int{5}
}

func (x *TaskServiceCreateResponse) GetData() *entities.TaskInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_tracking_services_task_proto protoreflect.FileDescriptor

var file_tracking_services_task_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x23,
	0x92, 0x41, 0x20, 0x0a, 0x14, 0x2a, 0x08, 0x47, 0x65, 0x74, 0x20, 0x54, 0x61, 0x73, 0x6b, 0x32,
	0x08, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x32, 0x08, 0x7b, 0x22, 0x69, 0x64, 0x22,
	0x3a, 0x31, 0x7d, 0x22, 0x4f, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xc5, 0x01, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x54, 0x92, 0x41, 0x51, 0x0a, 0x24, 0x2a, 0x10, 0x47,
	0x65, 0x74, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x4f, 0x66, 0x20, 0x54, 0x61, 0x73, 0x6b, 0x32,
	0x10, 0x47, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x61, 0x73,
	0x6b, 0x32, 0x29, 0x7b, 0x22, 0x69, 0x64, 0x73, 0x22, 0x3a, 0x5b, 0x31, 0x2c, 0x20, 0x32, 0x2c,
	0x20, 0x33, 0x5d, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x20, 0x31, 0x2c, 0x20,
	0x22, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3a, 0x20, 0x32, 0x30, 0x7d, 0x22, 0x49, 0x0a, 0x16,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x01, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x89, 0x01, 0x92, 0x41, 0x85, 0x01, 0x0a, 0x1a, 0x2a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x32, 0x67, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3a, 0x20, 0x22, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x6f, 0x6b,
	0x22, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x32,
	0x30, 0x32, 0x31, 0x2d, 0x30, 0x36, 0x2d, 0x33, 0x30, 0x20, 0x31, 0x36, 0x3a, 0x30, 0x30, 0x3a,
	0x34, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x32,
	0x30, 0x32, 0x31, 0x2d, 0x30, 0x36, 0x2d, 0x33, 0x30, 0x20, 0x31, 0x36, 0x3a, 0x30, 0x30, 0x3a,
	0x34, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x20, 0x31,
	0x7d, 0x22, 0x4c, 0x0a, 0x19, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0xfc, 0x02, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2e, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x12, 0x78, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x3a, 0x01, 0x2a, 0x42, 0xb8,
	0x03, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x53, 0x59, 0x53, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x92, 0x41, 0xea, 0x02, 0x12,
	0x19, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x12, 0x08, 0x54, 0x61, 0x73,
	0x6b, 0x20, 0x41, 0x50, 0x49, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x0e, 0x31, 0x32, 0x37, 0x2e,
	0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x52, 0x3b, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x34, 0x0a, 0x2a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02, 0x01, 0x07, 0x52, 0xd8,
	0x01, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0xd0, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xbf, 0x01, 0x0a, 0x10, 0x58, 0x2d, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x49, 0x64, 0x12, 0xaa, 0x01, 0x0a,
	0x2b, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x1a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x32, 0x26, 0x22, 0x32, 0x34, 0x33,
	0x38, 0x61, 0x63, 0x33, 0x63, 0x2d, 0x33, 0x37, 0x65, 0x62, 0x2d, 0x34, 0x39, 0x30, 0x32, 0x2d,
	0x61, 0x64, 0x65, 0x66, 0x2d, 0x65, 0x64, 0x31, 0x36, 0x62, 0x34, 0x34, 0x33, 0x31, 0x30, 0x33,
	0x30, 0x22, 0x6a, 0x45, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x38, 0x7d,
	0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x34, 0x5b, 0x30,
	0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x33, 0x7d, 0x2d, 0x5b, 0x38, 0x39, 0x41, 0x42, 0x5d,
	0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x33, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39,
	0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x31, 0x32, 0x7d, 0x24, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tracking_services_task_proto_rawDescOnce sync.Once
	file_tracking_services_task_proto_rawDescData = file_tracking_services_task_proto_rawDesc
)

func file_tracking_services_task_proto_rawDescGZIP() []byte {
	file_tracking_services_task_proto_rawDescOnce.Do(func() {
		file_tracking_services_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_tracking_services_task_proto_rawDescData)
	})
	return file_tracking_services_task_proto_rawDescData
}

var file_tracking_services_task_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tracking_services_task_proto_goTypes = []interface{}{
	(*TaskServiceGetSingleRequest)(nil),  // 0: tracking.services.TaskServiceGetSingleRequest
	(*TaskServiceGetSingleResponse)(nil), // 1: tracking.services.TaskServiceGetSingleResponse
	(*TaskServiceGetRequest)(nil),        // 2: tracking.services.TaskServiceGetRequest
	(*TaskServiceGetResponse)(nil),       // 3: tracking.services.TaskServiceGetResponse
	(*TaskServiceCreateRequest)(nil),     // 4: tracking.services.TaskServiceCreateRequest
	(*TaskServiceCreateResponse)(nil),    // 5: tracking.services.TaskServiceCreateResponse
	(*entities.TaskInfo)(nil),            // 6: tracking.entities.TaskInfo
}
var file_tracking_services_task_proto_depIdxs = []int32{
	6, // 0: tracking.services.TaskServiceGetSingleResponse.data:type_name -> tracking.entities.TaskInfo
	6, // 1: tracking.services.TaskServiceGetResponse.data:type_name -> tracking.entities.TaskInfo
	6, // 2: tracking.services.TaskServiceCreateRequest.data:type_name -> tracking.entities.TaskInfo
	6, // 3: tracking.services.TaskServiceCreateResponse.data:type_name -> tracking.entities.TaskInfo
	0, // 4: tracking.services.TaskService.GetSingle:input_type -> tracking.services.TaskServiceGetSingleRequest
	2, // 5: tracking.services.TaskService.Get:input_type -> tracking.services.TaskServiceGetRequest
	4, // 6: tracking.services.TaskService.Create:input_type -> tracking.services.TaskServiceCreateRequest
	1, // 7: tracking.services.TaskService.GetSingle:output_type -> tracking.services.TaskServiceGetSingleResponse
	3, // 8: tracking.services.TaskService.Get:output_type -> tracking.services.TaskServiceGetResponse
	5, // 9: tracking.services.TaskService.Create:output_type -> tracking.services.TaskServiceCreateResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_tracking_services_task_proto_init() }
func file_tracking_services_task_proto_init() {
	if File_tracking_services_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tracking_services_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskServiceGetSingleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_services_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskServiceGetSingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_services_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_services_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_services_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_services_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tracking_services_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tracking_services_task_proto_goTypes,
		DependencyIndexes: file_tracking_services_task_proto_depIdxs,
		MessageInfos:      file_tracking_services_task_proto_msgTypes,
	}.Build()
	File_tracking_services_task_proto = out.File
	file_tracking_services_task_proto_rawDesc = nil
	file_tracking_services_task_proto_goTypes = nil
	file_tracking_services_task_proto_depIdxs = nil
}
